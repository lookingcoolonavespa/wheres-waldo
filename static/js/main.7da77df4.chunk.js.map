{"version":3,"sources":["components/NavBtn.js","components/LevelSelect/LevelSelectBGSlide.js","assets/characters/waldo.png","assets/characters/gf.png","assets/characters/dog.png","assets/characters/wizard.png","assets/characters/evil_waldo.png","assets/levels/opt_wheres-waldo-0.jpeg","assets/levels/opt_wheres-waldo-1.jpeg","assets/levels/opt_wheres-waldo-2.jpeg","assets/levels/opt_wheres-waldo-3.jpeg","assets/levels/opt_wheres-waldo-4.jpeg","assets/levels/opt_wheres-waldo-5.jpeg","assets/levels/opt_wheres-waldo-6.jpeg","assets/Wheres_Waldo_-_Logo.png","imgSrc.js","components/LevelSelect/LevelSelectBG.js","components/FoundCharImg.js","components/CharList.js","components/LevelSelect/LevelSelectSlide.js","logic/firebaseStuff.js","logic/time.js","components/LevelSelect/LevelSelectSliderFrame.js","components/LevelSelect/LevelSelection.js","components/Timer.js","components/Tooltip.js","components/Nav.js","components/InfoPopup.js","components/EndgamePopup.js","components/NewGamePopup.js","components/CharPopup.js","components/SelectionBox.js","components/SelectionPopup.js","components/Level.js","App.js","index.js"],"names":["NavBtn","React","forwardRef","ref","direction","onClick","style","id","className","type","displayName","LevelSelectBGSlide","bgImage","isVisible","useRef","div","charcImg","waldo","wenda","woof","wizard","odlaw","levels","img","levelOne","char","levelTwo","levelThree","levelFour","levelFive","levelSix","levelSeven","LevelSelectBG","slide","bgProps","useSprings","length","opacity","config","friction","bgPropsRef","useEffect","update","index","start","useBgFadeAnime","map","backgroundImage","FoundCharImg","name","src","alt","CharList","list","foundChars","includes","LevelSelectSlide","frameWidth","bestTime","charList","width","height","pullAnswers","level","a","db","getFirestore","getDoc","doc","answers","exists","data","Error","pullLeaderboard","leaderboard","updateLeaderboard","leaderboardRef","updateDoc","setDoc","millisecondsToTime","milli","rtrnEl","milliseconds","seconds","Math","floor","minutes","pad","num","slice","parseTime","time","split","initializeApp","apiKey","authDomain","projectId","forEach","answer","LevelSelectSliderFrame","slideProps","btnRef","setLevel","previewRef","useState","setFrameWidth","btnWidth","setBtnWidth","current","offsetWidth","window","addEventListener","setNewFrameWidth","removeEventListener","useMeasurements","setLeaderboard","transform","offset","to","offsetX","willChange","marginLeft","LevelSelection","setSlide","useSpring","slidePropsRef","prevSlide","nextSlide","prev","useSlide","Fragment","logo","getNavBtnStyle","cursor","pointerEvents","Timer","timer","setTimer","isGameOver","Date","now","startTime","setStartTime","isMounted","myTimer","elapsedTime","clearInterval","setInterval","Tooltip","close","tooltipRef","pxToShift","setPxToShift","trianglePos","top","left","e","stopPropagation","Nav","goBack","setIsGameOver","isTooltip","setIsTooltip","InfoPopup","msg","icon","EndgamePopup","setInfoPopupStatus","showNewGamePopup","place","setPlace","isError","setIsError","inputRef","getPlace","htmlFor","onSubmit","sortNewLeaderboard","findIndex","obj","isShow","message","username","value","console","log","push","sort","b","NewGamePopup","reset","CharPopup","chars","validate","SelectionBox","SelectionPopup","isPopup","position","hidePopup","modalStyle","charPopupStyle","setCharPopupStyle","modalRef","dropdownRef","y","offsetHeight","bottom","x","Level","infoPopupStatus","clearTimeout","setTimeout","useInfoPopupStatus","setFoundChars","selectionStatus","setPopupStatus","showSelectionPopup","hideSelectionPopup","popupPos","clientX","clientY","clickPos","layerX","layerY","useSelectionStatus","isEndgamePopup","setIsEndgamePopup","useIsGameOver","isNewGamePopup","setIsNewGamePopup","ctnRef","dragToScroll","mouseDownHandler","mouseMoveHandler","mouseUpHandler","mouseLeaveHandler","selectionBoxRadius","startPos","isDown","preventDefault","scrollTop","scrollLeft","dx","dy","isInBetween","onValidCheck","isValid","capitalizeFirstLetter","min","max","answerX","answerY","clickX","clickY","selectionRange","xMin","xMax","yMin","yMax","str","charAt","toUpperCase","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7da77df4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavBtn = React.forwardRef(({ direction, onClick, style }, ref) => {\n  return (\n    <button\n      ref={ref}\n      id={`${direction}-nav-btn`}\n      className=\"nav-btn\"\n      type=\"button\"\n      onClick={onClick}\n      style={style}\n    >\n      <i></i>\n    </button>\n  );\n});\n\nNavBtn.propTypes = {\n  direction: PropTypes.string,\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n};\n\nNavBtn.displayName = 'NavBtn';\n\nexport default NavBtn;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { animated } from 'react-spring';\n\nconst LevelSelectBGSlide = ({ style, bgImage, isVisible }) => {\n  const ref = useRef();\n\n  return (\n    <animated.div\n      ref={ref}\n      className={`slider-slide ${isVisible ? '' : 'lazy'}`}\n      style={{ ...style, ...bgImage }}\n    ></animated.div>\n  );\n};\n\nLevelSelectBGSlide.propTypes = {\n  style: PropTypes.object,\n  bgImage: PropTypes.object,\n  isVisible: PropTypes.bool,\n};\n\nexport default LevelSelectBGSlide;\n","export default __webpack_public_path__ + \"static/media/waldo.af4211d5.png\";","export default __webpack_public_path__ + \"static/media/gf.0cb89a79.png\";","export default __webpack_public_path__ + \"static/media/dog.556b0530.png\";","export default __webpack_public_path__ + \"static/media/wizard.e9baf93b.png\";","export default __webpack_public_path__ + \"static/media/evil_waldo.792cf427.png\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-0.220971a1.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-1.a7ef3e57.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-2.da0205ae.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-3.270d0889.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-4.9ad184f3.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-5.b3840372.jpeg\";","export default __webpack_public_path__ + \"static/media/opt_wheres-waldo-6.c7a6bd8e.jpeg\";","export default __webpack_public_path__ + \"static/media/Wheres_Waldo_-_Logo.e6ffa93d.png\";","import waldo from './assets/characters/waldo.png';\nimport wenda from './assets/characters/gf.png';\nimport woof from './assets/characters/dog.png';\nimport wizard from './assets/characters/wizard.png';\nimport odlaw from './assets/characters/evil_waldo.png';\n\nimport levelOne from './assets/levels/opt_wheres-waldo-0.jpeg';\nimport levelTwo from './assets/levels/opt_wheres-waldo-1.jpeg';\nimport levelThree from './assets/levels/opt_wheres-waldo-2.jpeg';\nimport levelFour from './assets/levels/opt_wheres-waldo-3.jpeg';\nimport levelFive from './assets/levels/opt_wheres-waldo-4.jpeg';\nimport levelSix from './assets/levels/opt_wheres-waldo-5.jpeg';\nimport levelSeven from './assets/levels/opt_wheres-waldo-6.jpeg';\n\nimport logo from './assets/Wheres_Waldo_-_Logo.png';\n\nconst charcImg = {\n  waldo,\n  wenda,\n  woof,\n  wizard,\n  odlaw,\n};\n\nconst levels = [\n  { img: levelOne, char: ['waldo', 'wenda', 'odlaw'] },\n  { img: levelTwo, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelThree, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelFour, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelFive, char: ['waldo', 'wenda', 'wizard', 'odlaw'] },\n  { img: levelSix, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelSeven, char: ['waldo', 'wenda', 'wizard', 'odlaw'] },\n];\n\nexport { charcImg, levels, logo };\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSprings } from 'react-spring';\n\nimport LevelSelectBGSlide from './LevelSelectBGSlide';\n\nimport { levels } from '../../imgSrc';\n\nconst LevelSelectBG = ({ slide }) => {\n  const { bgProps } = useBgFadeAnime(slide);\n\n  return (\n    <div id=\"bg-frame\" className=\"frame\">\n      {bgProps.map((style, index) => {\n        const bgImage = { backgroundImage: `url(${levels[index].img})` };\n        return (\n          <LevelSelectBGSlide\n            key={index}\n            style={style}\n            bgImage={bgImage}\n            isVisible={\n              slide - 1 === index || slide === index || slide + 1 === index\n            }\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nLevelSelectBG.propTypes = {\n  slide: PropTypes.number,\n};\n\nexport default LevelSelectBG;\n\nfunction useBgFadeAnime(slide) {\n  const [bgProps, bgPropsRef] = useSprings(levels.length, () => ({\n    opacity: 0,\n    config: {\n      friction: 80,\n    },\n  }));\n\n  useEffect(() => {\n    bgPropsRef\n      .update((index) => {\n        if (index === slide) return { opacity: 1 };\n        return { opacity: 0 };\n      })\n      .start();\n  }, [slide, bgPropsRef]);\n\n  return { bgProps };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { charcImg } from '../imgSrc';\n\nconst FoundCharImg = ({ name, onClick }) => {\n  return (\n    <div className=\"char-ctn\" onClick={onClick}>\n      <i className=\"flaticon-draw-check-mark\"></i>\n      <img src={charcImg[name]} alt={name} />\n    </div>\n  );\n};\n\nFoundCharImg.propTypes = {\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default FoundCharImg;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FoundCharImg from './FoundCharImg';\n\nimport { charcImg } from '../imgSrc';\n\nconst CharList = ({ list, foundChars = [] }) => {\n  return (\n    <div className=\"char-list\">\n      {list.map((name) => {\n        if (foundChars.includes(name))\n          return <FoundCharImg key={name} name={name} />;\n        return <img key={name} src={charcImg[name]} alt={name} />;\n      })}\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  list: PropTypes.array,\n  foundChars: PropTypes.array,\n};\n\nexport default CharList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CharList from '../CharList';\n\nconst LevelSelectSlide = ({\n  frameWidth,\n  bestTime,\n  charList,\n  img,\n  isVisible,\n}) => {\n  return (\n    <div\n      className=\"slider-slide\"\n      style={{\n        width: `${frameWidth}px`,\n        height: 'auto',\n      }}\n    >\n      <p className=\"best-time\">Best time: {bestTime}</p>\n      <CharList list={charList} />\n      {isVisible && (\n        <img\n          src={img}\n          style={{ width: `${frameWidth}px` }}\n          className=\"preview-img\"\n        />\n      )}\n    </div>\n  );\n};\n\nLevelSelectSlide.propTypes = {\n  frameWidth: PropTypes.number,\n  bestTime: PropTypes.string,\n  charList: PropTypes.array,\n  img: PropTypes.string,\n  isVisible: PropTypes.bool,\n};\n\nexport default LevelSelectSlide;\n","import { initializeApp } from 'firebase/app';\nimport {\n  getFirestore,\n  doc,\n  setDoc,\n  getDoc,\n  updateDoc,\n} from 'firebase/firestore';\n\n(function init() {\n  const config = {\n    apiKey: 'AIzaSyDAj11m4V4uaxO8RRM-FKIe0bhSn4vS0W4',\n    authDomain: 'where-s-waldo-a6172.firebaseapp.com',\n    projectId: 'where-s-waldo-a6172',\n  };\n  initializeApp(config);\n\n  (async function uploadAnswers() {\n    const db = getFirestore();\n\n    const answer = await getDoc(doc(db, 'answers', '0'));\n    if (answer.exists()) return;\n\n    const answers = [\n      { waldo: [475, 1548], wenda: [2141, 1395], odlaw: [2446, 1504] },\n      {\n        odlaw: [323, 691],\n        wizard: [810, 688],\n        waldo: [1856, 736],\n        wenda: [2320, 792],\n        woof: [2042, 723],\n      },\n      {\n        waldo: [1217, 1237],\n        wenda: [885, 1027],\n        odlaw: [213, 1362],\n        wizard: [2345, 1153],\n        woof: [1764, 1795],\n      },\n      {\n        wizard: [209, 1448],\n        odlaw: [926, 1215],\n        wenda: [1471, 799],\n        waldo: [2564, 1405],\n        woof: [893, 1369],\n      },\n      {\n        waldo: [842, 655],\n        wenda: [757, 1381],\n        wizard: [1837, 1652],\n        odlaw: [1799, 1230],\n      },\n      {\n        wenda: [1799, 1303],\n        odlaw: [1671, 1549],\n        waldo: [2111, 832],\n        wizard: [2072, 1305],\n        woof: [1558, 1261],\n      },\n      {\n        waldo: [2676, 1288],\n        odlaw: [1981, 1088],\n        wizard: [755, 949],\n        wenda: [398, 1645],\n      },\n    ];\n\n    answers.forEach((answer, index) =>\n      setDoc(doc(db, 'answers', `${index}`), answer)\n    );\n  })();\n})();\n\nasync function pullAnswers(level) {\n  const db = getFirestore();\n\n  try {\n    const answers = await getDoc(doc(db, 'answers', `${level}`));\n    if (answers.exists()) return answers.data();\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function pullLeaderboard(level) {\n  const db = getFirestore();\n\n  try {\n    const leaderboard = await getDoc(doc(db, 'leaderboard', 'allLevels'));\n    if (!leaderboard.exists()) return;\n\n    if (level !== 0 && !level) return leaderboard.data();\n\n    return leaderboard.data()[level];\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function updateLeaderboard(level, leaderboard) {\n  const db = getFirestore();\n\n  try {\n    const leaderboardRef = doc(db, 'leaderboard', 'allLevels');\n    const allLeaderboard = await getDoc(leaderboardRef);\n\n    if (allLeaderboard.exists())\n      return updateDoc(leaderboardRef, {\n        [level]: leaderboard,\n      });\n\n    return setDoc(doc(db, 'leaderboard', 'allLevels'), {\n      [level]: leaderboard,\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport { pullAnswers, pullLeaderboard, updateLeaderboard };\n","import React from 'react';\n\nfunction millisecondsToTime(milli, rtrnEl = true) {\n  const milliseconds = milli % 1000;\n  const seconds = Math.floor((milli / 1000) % 60);\n  const minutes = Math.floor((milli / (60 * 1000)) % 60);\n  return rtrnEl ? (\n    <div>\n      <span className=\"num-timer\">{pad(minutes) + ':'}</span>\n      <span className=\"num-timer\">{pad(seconds) + ':'}</span>\n      <span className=\"num-timer ms-timer\">{pad(milliseconds, 3)}</span>\n    </div>\n  ) : (\n    pad(minutes) + ':' + pad(seconds) + ':' + pad(milliseconds, 3)\n  );\n\n  function pad(num, pad) {\n    pad = pad || 2;\n    return ('00' + num).slice(-pad);\n  }\n}\n\nfunction convertToMillsec(timer) {\n  const split = timer.split(':');\n  return +split[0] * 60000 + +split[1] * 1000 + +split[2];\n}\n\nfunction parseTime(time) {\n  const split = time.split(':');\n  if (split[0] === '00') return time.slice(3) + ' seconds';\n  return time + ' minutes';\n}\n\nexport { millisecondsToTime, convertToMillsec, parseTime };\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { animated } from 'react-spring';\n\nimport LevelSelectSlide from './LevelSelectSlide';\n\nimport { pullLeaderboard } from '../../logic/firebaseStuff';\nimport { millisecondsToTime, parseTime } from '../../logic/time';\n\nimport { levels } from '../../imgSrc';\n\nconst LevelSelectSliderFrame = ({ slide, slideProps, btnRef, setLevel }) => {\n  // get width of preview container so we know how big slide needs to be/how many px it needs to slide\n  const previewRef = useRef();\n\n  const { frameWidth, btnWidth } = useMeasurements(previewRef, btnRef);\n\n  const [leaderboard, setLeaderboard] = useState();\n  useEffect(async function () {\n    const leaderboard = await pullLeaderboard();\n    setLeaderboard(leaderboard);\n  }, []);\n\n  return (\n    <animated.div\n      ref={previewRef}\n      className=\"frame\"\n      onClick={() => setLevel(slide)}\n      style={{\n        transform: slideProps.offset.to(\n          (offsetX) => `translate3d(${offsetX * frameWidth}px, 0, 0)`\n        ),\n        willChange: 'transform',\n        marginLeft: `${btnWidth}px`,\n      }}\n    >\n      {levels.map((level, index) => {\n        const bestTime =\n          leaderboard && leaderboard[index]\n            ? parseTime(millisecondsToTime(leaderboard[index][0].time, false))\n            : '--:--:---';\n        return (\n          <LevelSelectSlide\n            key={index}\n            frameWidth={frameWidth}\n            bestTime={bestTime}\n            charList={level.char}\n            img={level.img}\n            isVisible={\n              slide - 1 === index || slide === index || slide + 1 === index\n            }\n          />\n        );\n      })}\n    </animated.div>\n  );\n};\n\nLevelSelectSliderFrame.propTypes = {\n  slide: PropTypes.number,\n  slideProps: PropTypes.object,\n  btnRef: PropTypes.object,\n  setLevel: PropTypes.func,\n};\n\nexport default LevelSelectSliderFrame;\n\n/// /////////////\n// Custom Hooks//\n/// /////////////\nfunction useMeasurements(previewRef, btnRef) {\n  const [frameWidth, setFrameWidth] = useState();\n  const [btnWidth, setBtnWidth] = useState();\n\n  useEffect(() => {\n    setFrameWidth(\n      previewRef.current.offsetWidth - 2 * btnRef.current.offsetWidth\n    );\n    setBtnWidth(btnRef.current.offsetWidth);\n\n    window.addEventListener('resize', setNewFrameWidth);\n    return () => window.removeEventListener('resize', setNewFrameWidth);\n\n    function setNewFrameWidth() {\n      setFrameWidth(previewRef.current.offsetWidth);\n    }\n  });\n\n  return { frameWidth, btnWidth };\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSpring } from 'react-spring';\n\nimport NavBtn from '../NavBtn';\nimport LevelSelectBG from './LevelSelectBG';\n\nimport '../../styles/LevelSelection.css';\nimport { levels, logo } from '../../imgSrc';\nimport LevelSelectSliderFrame from './LevelSelectSliderFrame';\n\nconst LevelSelection = ({ setLevel }) => {\n  const { slide, slideProps, prevSlide, nextSlide } = useSlide();\n\n  const btnRef = useRef();\n\n  return (\n    <React.Fragment>\n      <LevelSelectBG slide={slide} />\n      <div id=\"level-selection-ctn\">\n        <img src={logo} alt=\"wheres waldo\" height=\"80px\" />\n        <p>Select a level</p>\n        <div className=\"slider\">\n          <NavBtn\n            direction=\"left\"\n            onClick={prevSlide}\n            style={getNavBtnStyle(slide, 'left')}\n          />\n          <LevelSelectSliderFrame\n            slide={slide}\n            slideProps={slideProps}\n            btnRef={btnRef}\n            setLevel={setLevel}\n          />\n          <NavBtn\n            ref={btnRef}\n            direction=\"right\"\n            onClick={nextSlide}\n            style={getNavBtnStyle(slide, 'right')}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nLevelSelection.propTypes = {\n  setLevel: PropTypes.func,\n};\n\nexport default LevelSelection;\nexport { levels };\n\n/// /////////////\n// Custom Hooks//\n/// /////////////\n\nfunction useSlide() {\n  const [slide, setSlide] = useState(0);\n\n  const [slideProps, slidePropsRef] = useSpring(() => ({\n    offset: 0,\n    config: {\n      friction: 40,\n    },\n  }));\n\n  useEffect(\n    () => slidePropsRef.update(() => ({ offset: 0 - slide })).start(),\n    [slide, slidePropsRef]\n  );\n\n  return { slide, slideProps, slidePropsRef, prevSlide, nextSlide };\n\n  function prevSlide() {\n    setSlide((prev) => {\n      if (prev === 0) return 0;\n      return --prev;\n    });\n  }\n\n  function nextSlide() {\n    setSlide((prev) => {\n      if (prev === levels.length - 1) return levels.length - 1;\n      return ++prev;\n    });\n  }\n}\n\n/// /////////////\n// helper funcs//\n/// /////////////\n\nfunction getNavBtnStyle(slide, direction) {\n  switch (direction) {\n    case 'left':\n      return slide === 0\n        ? {\n            opacity: 0.2,\n            cursor: 'default',\n            pointerEvents: 'none',\n          }\n        : {\n            opacity: 1,\n            cursor: 'pointer',\n            pointerEvents: 'all',\n          };\n\n    case 'right':\n      return slide === levels.length - 1\n        ? {\n            opacity: 0.2,\n            cursor: 'default',\n            pointerEvents: 'none',\n          }\n        : {\n            opacity: 1,\n            cursor: 'pointer',\n            pointerEvents: 'all',\n          };\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { millisecondsToTime } from '../logic/time';\n\nimport '../styles/Timer.css';\n\nconst Timer = ({ timer, setTimer, isGameOver }) => {\n  const [startTime, setStartTime] = useState(Date.now());\n\n  // need this otherwise, React performs state update when unmounted\n  let isMounted = true;\n  useEffect(() => () => {\n    isMounted = false;\n  });\n\n  useEffect(() => {\n    isGameOver ? clearInterval(myTimer) : setInterval(myTimer, 50);\n    if (isGameOver) setStartTime(Date.now());\n\n    function myTimer() {\n      const elapsedTime = Date.now() - startTime;\n      if (!isMounted) return;\n      setTimer(elapsedTime);\n    }\n  });\n  return <div id=\"timer\">{millisecondsToTime(timer)}</div>;\n};\n\nTimer.displayName = Timer;\nexport default Timer;\n\nTimer.propTypes = {\n  timer: PropTypes.number,\n  setTimer: PropTypes.func,\n  isGameOver: PropTypes.bool,\n};\n","import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/TooltipStyles.css';\n\nconst Tooltip = ({ close }) => {\n  const tooltipRef = useRef(null);\n\n  const [pxToShift, setPxToShift] = useState('-32.1px');\n\n  useEffect(function positionTooltip() {\n    if (!tooltipRef.current) return;\n\n    const width = tooltipRef.current.offsetWidth;\n    const trianglePos = window.offsetWidth > 450 ? 15 : 35; // in %, the value of 'left' styling of tooltip:before aka the little triangle thing\n    const btnRadius = 15; // in px,\n\n    setPxToShift(`-${(width * trianglePos) / 100 - btnRadius}px`);\n  }, []);\n\n  useEffect(function closeTooltipEvent() {\n    window.addEventListener('click', close);\n\n    return () => window.removeEventListener('click', close);\n  });\n\n  return (\n    <div\n      className=\"tooltip\"\n      ref={tooltipRef}\n      style={{\n        top: '52px',\n        left: pxToShift,\n      }}\n      onClick={(e) => e.stopPropagation()}\n    >\n      Double click to make your selection\n    </div>\n  );\n};\n\nTooltip.propTypes = {\n  close: PropTypes.func,\n};\n\nexport default Tooltip;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Timer from './Timer';\nimport Tooltip from './Tooltip';\nimport CharList from './CharList';\n\nimport '../styles/Nav.css';\n\nconst Nav = ({\n  goBack,\n  charList,\n  foundChars,\n  isGameOver,\n  setIsGameOver,\n  timer,\n  setTimer,\n}) => {\n  const [isTooltip, setIsTooltip] = useState(false);\n\n  useEffect(() => {\n    if (foundChars.length === charList.length) {\n      setIsGameOver(true);\n    }\n  });\n  return (\n    <nav id=\"nav\">\n      <div className=\"btn-ctn\">\n        <button type=\"button\" className=\"home-btn text-btn\" onClick={goBack}>\n          Go Back\n        </button>\n        <div className=\"tooltip-ctn\">\n          <button\n            type=\"button\"\n            className=\"help-btn icon-btn\"\n            onClick={() => setIsTooltip(true)}\n          >\n            ?\n          </button>\n          {isTooltip && <Tooltip close={() => setIsTooltip(false)} />}\n        </div>\n      </div>\n      <Timer timer={timer} setTimer={setTimer} isGameOver={isGameOver} />\n      <CharList list={charList} foundChars={foundChars} />\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  goBack: PropTypes.func,\n  charList: PropTypes.array,\n  foundChars: PropTypes.array,\n  isGameOver: PropTypes.bool,\n  setIsGameOver: PropTypes.func,\n  timer: PropTypes.number,\n  setTimer: PropTypes.func,\n};\n\nexport default Nav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/InfoPopup.css';\n\nconst InfoPopup = ({ msg, icon }) => {\n  return (\n    <div id=\"valid-popup\">\n      <p className=\"valid-msg\">\n        {icon && <i className={icon}></i>} {msg}\n      </p>\n    </div>\n  );\n};\n\nInfoPopup.propTypes = {\n  msg: PropTypes.string,\n  icon: PropTypes.string,\n};\n\nexport default InfoPopup;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { pullLeaderboard, updateLeaderboard } from '../logic/firebaseStuff';\nimport { millisecondsToTime, parseTime } from '../logic/time';\n\nimport '../styles/EndgamePopup.css';\n\nconst EndgamePopup = ({\n  level,\n  time,\n  close,\n  setInfoPopupStatus,\n  showNewGamePopup,\n}) => {\n  const [place, setPlace] = useState();\n  const [isError, setIsError] = useState(false);\n  const inputRef = useRef();\n\n  useEffect(async function () {\n    if (!isError)\n      setPlace(await getPlace(level, time, setInfoPopupStatus, setIsError));\n  });\n  return (\n    <div id=\"popup-modal\" className=\"modal\">\n      <div id=\"endgame-popup\">\n        <header>\n          <h2>You placed {place} in the world!</h2>\n        </header>\n        <hr />\n        <main>\n          <h3>You finished in {parseTime(millisecondsToTime(time, false))}</h3>\n          <p>Enter your name to save your score on the global leaderboard.</p>\n          <div className=\"input-field\">\n            <label htmlFor=\"name\">Username</label>\n            <input ref={inputRef} type=\"text\" name=\"name\" />\n          </div>\n        </main>\n        <footer>\n          <button\n            type=\"button\"\n            id=\"cancel-btn\"\n            className=\"text-btn\"\n            onClick={() => {\n              close();\n              showNewGamePopup();\n            }}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            id=\"submit-btn\"\n            className=\"text-btn\"\n            onClick={() =>\n              onSubmit(\n                level,\n                time,\n                inputRef.current,\n                close,\n                setInfoPopupStatus,\n                setIsError,\n                showNewGamePopup\n              )\n            }\n          >\n            Submit\n          </button>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nEndgamePopup.propTypes = {\n  level: PropTypes.number,\n  time: PropTypes.number,\n  close: PropTypes.func,\n  setInfoPopupStatus: PropTypes.func,\n  showNewGamePopup: PropTypes.func,\n};\n\nexport default EndgamePopup;\n\nasync function getPlace(level, time, setInfoPopupStatus, setIsError) {\n  try {\n    const leaderboard = await sortNewLeaderboard(level, time);\n    return leaderboard.findIndex((obj) => obj.time === time) + 1;\n  } catch (error) {\n    setIsError(true);\n    setInfoPopupStatus({\n      isShow: true,\n      msg: error.message,\n      icon: 'flaticon-close',\n    });\n    return '#';\n  }\n}\n\nasync function onSubmit(\n  level,\n  time,\n  inputRef,\n  close,\n  setInfoPopupStatus,\n  setIsError,\n  showNewGamePopup\n) {\n  const username = inputRef.value || 'Anonymous';\n  console.log(username);\n  try {\n    const leaderboard = await sortNewLeaderboard(level, time, username);\n    await updateLeaderboard(level, leaderboard);\n    setIsError(false);\n    setInfoPopupStatus({\n      isShow: true,\n      msg: 'Time uploaded successfully',\n      icon: 'flaticon-draw-check-mark',\n    });\n    close();\n    showNewGamePopup();\n  } catch (error) {\n    setInfoPopupStatus({\n      isShow: true,\n      msg: error.message,\n      icon: 'flaticon-close',\n    });\n    throw new Error(error);\n  }\n}\n\nasync function sortNewLeaderboard(level, time, username) {\n  const leaderboard = (await pullLeaderboard(level)) || [];\n  username ? leaderboard.push({ username, time }) : leaderboard.push({ time });\n  return leaderboard.sort((a, b) => {\n    return a.time - b.time;\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/NewGamePopup.css';\n\nconst NewGamePopup = ({ reset, goBack }) => {\n  return (\n    <div id=\"popup-modal\" className=\"modal\">\n      <div id=\"new-game-popup\" className=\"popup\">\n        <div className=\"btn-ctn\">\n          <button\n            type=\"button\"\n            id=\"cancel-btn\"\n            className=\"text-btn\"\n            onClick={goBack}\n          >\n            Level Select\n          </button>\n          <button\n            type=\"button\"\n            id=\"submit-btn\"\n            className=\"text-btn\"\n            onClick={reset}\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nNewGamePopup.propTypes = {\n  reset: PropTypes.func,\n  goBack: PropTypes.func,\n};\n\nexport default NewGamePopup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FoundCharImg from './FoundCharImg';\n\nimport '../styles/CharPopup.css';\n\nimport { charcImg } from '../imgSrc';\n\nconst CharPopup = React.forwardRef(\n  ({ style, foundChars, chars, validate }, ref) => {\n    return (\n      <div ref={ref} id=\"char-popup\" style={style}>\n        {chars.map((char) => {\n          if (foundChars.includes(char))\n            return (\n              <FoundCharImg\n                key={char}\n                name={char}\n                onClick={(e) => e.stopPropagation()}\n              />\n            );\n          return (\n            <div\n              className=\"char\"\n              key={char}\n              onClick={(e) => {\n                e.stopPropagation();\n                validate(char);\n              }}\n            >\n              <img src={charcImg[char]} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nCharPopup.propTypes = {\n  style: PropTypes.object,\n  foundChars: PropTypes.array,\n  chars: PropTypes.array,\n  validate: PropTypes.func,\n};\n\nCharPopup.displayName = CharPopup;\n\nexport default CharPopup;\n","import React from 'react';\n\nimport '../styles/SelectionBox.css';\n\nconst SelectionBox = () => {\n  return <div id=\"selection-box\"></div>;\n};\n\nexport default SelectionBox;\n","import React, { useState, useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\n\nimport CharPopup from './CharPopup';\nimport SelectionBox from './SelectionBox';\n\nimport { levels } from '../imgSrc';\nimport { useEffect } from 'react/cjs/react.development';\n\nconst SelectionPopup = ({\n  level,\n  foundChars,\n  isPopup,\n  position,\n  hidePopup,\n  validate,\n}) => {\n  const modalStyle = useSpring({ opacity: isPopup ? 1 : 0 });\n\n  const [charPopupStyle, setCharPopupStyle] = useState({});\n  const modalRef = useRef();\n  const dropdownRef = useRef();\n\n  useEffect(() => {\n    if (\n      position.y + dropdownRef.current.offsetHeight >\n      modalRef.current.offsetHeight\n    )\n      setCharPopupStyle((prev) => ({ ...prev, bottom: '110px' }));\n\n    if (\n      position.x + dropdownRef.current.offsetWidth >\n      modalRef.current.offsetWidth\n    )\n      setCharPopupStyle((prev) => ({ ...prev, left: '-50px' }));\n  });\n\n  const selectionBoxRadius = 55;\n  return (\n    <animated.div\n      ref={modalRef}\n      className=\"modal\"\n      style={modalStyle}\n      onClick={hidePopup}\n    >\n      <div\n        id=\"selection\"\n        style={{\n          top: position.y - selectionBoxRadius,\n          left: position.x - selectionBoxRadius,\n        }}\n      >\n        <SelectionBox />\n        <CharPopup\n          ref={dropdownRef}\n          style={charPopupStyle}\n          foundChars={foundChars}\n          chars={levels[level].char}\n          validate={(char) => validate(char, selectionBoxRadius)}\n        />\n      </div>\n    </animated.div>\n  );\n};\n\nSelectionPopup.propTypes = {\n  level: PropTypes.number,\n  foundChars: PropTypes.array,\n  isPopup: PropTypes.bool,\n  position: PropTypes.object,\n  hidePopup: PropTypes.func,\n  validate: PropTypes.func,\n};\n\nexport default SelectionPopup;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Nav from './Nav';\n\nimport InfoPopup from './InfoPopup';\nimport EndgamePopup from './EndgamePopup';\nimport NewGamePopup from './NewGamePopup';\nimport SelectionPopup from './SelectionPopup';\n\nimport { pullAnswers } from '../logic/firebaseStuff.js';\n\nimport { levels } from '../imgSrc';\n\nimport '../styles/Level.css';\n\nconst Level = ({ level, goBack }) => {\n  const [timer, setTimer] = useState(0);\n\n  const [infoPopupStatus, setInfoPopupStatus] = useInfoPopupStatus();\n\n  const [foundChars, setFoundChars] = useState([]);\n\n  const { selectionStatus, showSelectionPopup, hideSelectionPopup } =\n    useSelectionStatus();\n  const { isPopup, popupPos, clickPos } = selectionStatus;\n\n  const [isEndgamePopup, setIsEndgamePopup] = useState(false);\n  const { isGameOver, setIsGameOver } = useIsGameOver(setIsEndgamePopup);\n\n  const [isNewGamePopup, setIsNewGamePopup] = useState(false);\n\n  const ctnRef = useRef();\n  useEffect(() => {\n    ctnRef.current.addEventListener('dblclick', showSelectionPopup);\n\n    if (isGameOver)\n      ctnRef.current.removeEventListener('dblclick', showSelectionPopup);\n  }, [isGameOver]);\n  useEffect(() => {\n    ctnRef.current.addEventListener('mousedown', (e) =>\n      dragToScroll.mouseDownHandler(e, ctnRef)\n    );\n    ctnRef.current.addEventListener('mousemove', (e) =>\n      dragToScroll.mouseMoveHandler(e, ctnRef)\n    );\n    ctnRef.current.addEventListener('mouseup', () =>\n      dragToScroll.mouseUpHandler(ctnRef)\n    );\n    ctnRef.current.addEventListener('mouseleave', () =>\n      dragToScroll.mouseLeaveHandler(ctnRef)\n    );\n  });\n\n  function reset() {\n    setIsNewGamePopup(false);\n    setFoundChars([]);\n    setTimer(0);\n    setIsGameOver(false);\n  }\n\n  return (\n    <React.Fragment>\n      {isEndgamePopup && (\n        <EndgamePopup\n          level={level}\n          time={timer}\n          close={() => {\n            setIsEndgamePopup(false);\n          }}\n          setInfoPopupStatus={setInfoPopupStatus}\n          showNewGamePopup={() => setIsNewGamePopup(true)}\n        />\n      )}\n      {isNewGamePopup && <NewGamePopup goBack={goBack} reset={reset} />}\n      <Nav\n        goBack={goBack}\n        charList={levels[level].char}\n        foundChars={foundChars}\n        isGameOver={isGameOver}\n        setIsGameOver={setIsGameOver}\n        timer={timer}\n        setTimer={setTimer}\n      />\n      <div id=\"game-ctn\" ref={ctnRef}>\n        <img src={levels[level].img} />\n      </div>\n      {infoPopupStatus.isShow && (\n        <InfoPopup msg={infoPopupStatus.msg} icon={infoPopupStatus.icon} />\n      )}\n      {isPopup && (\n        <SelectionPopup\n          level={level}\n          foundChars={foundChars}\n          validate={(char, selectionBoxRadius) => {\n            validate(\n              level,\n              char,\n              foundChars,\n              clickPos,\n              selectionBoxRadius,\n              setInfoPopupStatus,\n              setFoundChars\n            );\n            hideSelectionPopup();\n          }}\n          isPopup={isPopup}\n          position={popupPos}\n          hidePopup={hideSelectionPopup}\n        />\n      )}\n    </React.Fragment>\n  );\n};\nLevel.propTypes = {\n  level: PropTypes.number,\n  goBack: PropTypes.func,\n};\n\nexport default Level;\n\nconst dragToScroll = {\n  startPos: { top: 0, left: 0, x: 0, y: 0 },\n  isDown: false,\n  mouseDownHandler: (e, ctnRef) => {\n    e.preventDefault();\n    // get current position\n    dragToScroll.startPos = {\n      top: ctnRef.current.scrollTop,\n      left: ctnRef.current.scrollLeft,\n      x: e.clientX,\n      y: e.clientY,\n    };\n    ctnRef.current.style.cursor = 'grabbing';\n\n    dragToScroll.isDown = true;\n  },\n  mouseMoveHandler: (e, ctnRef) => {\n    // see how far the mouse has moved\n    // use scrollLeft + scrollTop to move\n    e.preventDefault();\n    if (!dragToScroll.isDown) return;\n\n    const dx = e.clientX - dragToScroll.startPos.x;\n    const dy = e.clientY - dragToScroll.startPos.y;\n    ctnRef.current.scrollLeft = dragToScroll.startPos.left - dx;\n    ctnRef.current.scrollTop = dragToScroll.startPos.top - dy;\n  },\n  mouseUpHandler: (ctnRef) => {\n    dragToScroll.isDown = false;\n    ctnRef.current.style.cursor = 'grab';\n  },\n  mouseLeaveHandler: (ctnRef) => {\n    dragToScroll.isDown = false;\n    ctnRef.current.style.cursor = 'grab';\n  },\n};\n\n/// /////////////\n// Custom Hooks//\n/// /////////////\n\nfunction useSelectionStatus() {\n  const [selectionStatus, setPopupStatus] = useState({});\n\n  return { selectionStatus, showSelectionPopup, hideSelectionPopup };\n\n  function showSelectionPopup(e) {\n    setPopupStatus({\n      isPopup: true,\n      popupPos: { x: e.clientX, y: e.clientY },\n      clickPos: [e.layerX, e.layerY],\n    });\n  }\n\n  function hideSelectionPopup() {\n    setPopupStatus((prev) => ({ ...prev, isPopup: false }));\n  }\n}\n\nfunction useInfoPopupStatus() {\n  const [infoPopupStatus, setInfoPopupStatus] = useState({});\n\n  useEffect(() => {\n    if (infoPopupStatus.isShow) {\n      let timer = null;\n\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n\n      timer = setTimeout(() => {\n        setInfoPopupStatus((prev) => ({ ...prev, isShow: false }));\n      }, 2000);\n    }\n  }, [infoPopupStatus]);\n\n  return [infoPopupStatus, setInfoPopupStatus];\n}\n\nasync function validate(\n  level,\n  char,\n  foundChars,\n  clickPos,\n  selectionBoxRadius,\n  setInfoPopupStatus,\n  setFoundChars\n) {\n  const answers = await pullAnswers(level);\n  const [answerX, answerY] = answers[char];\n  const [clickX, clickY] = clickPos;\n\n  const selectionRange = {\n    xMin: clickX - selectionBoxRadius,\n    xMax: clickX + selectionBoxRadius,\n    yMin: clickY - selectionBoxRadius,\n    yMax: clickY + selectionBoxRadius,\n  };\n\n  if (\n    isInBetween(selectionRange.xMin, selectionRange.xMax, answerX) &&\n    isInBetween(selectionRange.yMin, selectionRange.yMax, answerY)\n  )\n    return onValidCheck(true);\n\n  return onValidCheck(false);\n\n  // helper functions\n  function isInBetween(min, max, num) {\n    return num >= min && num <= max;\n  }\n\n  function onValidCheck(isValid) {\n    if (foundChars.includes(char)) isValid = 'found';\n    const name = capitalizeFirstLetter(char);\n    let msg;\n    let icon;\n    switch (isValid) {\n      case true:\n        msg = `You found ${name}!`;\n        icon = 'flaticon-draw-check-mark';\n        break;\n      case false:\n        msg = `Woops! ${name} isn't there. Try\n      again.`;\n        icon = 'flaticon-close';\n        break;\n      case 'found':\n        msg = `You've already found ${name}!`;\n        icon = '';\n        break;\n    }\n    setInfoPopupStatus({\n      isShow: true,\n      msg,\n      icon,\n    });\n    if (isValid && !foundChars.includes(char))\n      setFoundChars((prev) => [...prev, char]);\n  }\n}\n\nfunction useIsGameOver(setIsEndgamePopup) {\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  useEffect(() => {\n    if (isGameOver) {\n      setIsEndgamePopup(true);\n    }\n  }, [isGameOver]);\n\n  return { isGameOver, setIsGameOver };\n}\n\n/// /////////////\n// helper funcs//\n/// /////////////\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState } from 'react';\n\nimport LevelSelection from './components/LevelSelect/LevelSelection';\nimport Level from './components/Level';\n\nimport './globalStyles.css';\nimport './assets/icons/font/flaticon.css';\n\nfunction App() {\n  const [level, setLevel] = useState();\n\n  return (\n    <React.Fragment>\n      {!level && level !== 0 && <LevelSelection setLevel={setLevel} />}\n      {typeof level === 'number' && (\n        <Level level={level} goBack={() => setLevel()} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}