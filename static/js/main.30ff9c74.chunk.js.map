{"version":3,"sources":["logic/firebaseStuff.js","logic/time.js","assets/characters/waldo.png","assets/characters/gf.png","assets/characters/dog.png","assets/characters/wizard.png","assets/characters/evil_waldo.png","assets/levels/1*7v_75ZGg1CTmWAw1rEgMHQ.jpeg","assets/levels/wheres-waldo-1.jpeg","assets/levels/wheres-waldo-2.jpeg","assets/levels/wheres-waldo-3.jpeg","assets/levels/wheres-waldo-4.jpeg","assets/levels/wheres-waldo-5.jpeg","assets/levels/wheres-waldo-6.jpeg","assets/Wheres_Waldo_-_Logo.png","imgSrc.js","components/LevelSelection.js","components/Timer.js","components/Tooltip.js","components/Nav.js","components/CharPopup.js","components/SelectionBox.js","components/InfoPopup.js","components/EndgamePopup.js","components/NewGamePopup.js","components/Level.js","App.js","index.js"],"names":["pullAnswers","level","a","db","getFirestore","getDoc","doc","answers","exists","data","Error","pullLeaderboard","leaderboard","updateLeaderboard","leaderboardRef","updateDoc","setDoc","initializeApp","apiKey","authDomain","projectId","waldo","wenda","odlaw","wizard","woof","forEach","answer","index","millisecondsToTime","milli","rtrnEl","milliseconds","seconds","Math","floor","minutes","className","pad","num","slice","parseTime","time","split","charcImg","levels","img","levelOne","char","levelTwo","levelThree","levelFour","levelFive","levelSix","levelSeven","LevelSelection","setLevel","useState","slide","setSlide","useSpring","offset","config","friction","slideProps","slidePropsRef","useEffect","update","start","prevSlide","nextSlide","prev","length","useSlide","bgProps","useSprings","opacity","bgPropsRef","useBgFadeAnime","btnRef","useRef","previewRef","frameWidth","setFrameWidth","btnWidth","setBtnWidth","current","offsetWidth","window","addEventListener","setNewFrameWidth","removeEventListener","useMeasurements","setLeaderboard","Fragment","id","map","style","bgImage","backgroundImage","div","src","logo","alt","height","type","onClick","getNavBtnStyle","ref","transform","to","offsetX","willChange","marginLeft","bestTime","width","name","direction","cursor","pointerEvents","Timer","timer","setTimer","isGameOver","Date","now","startTime","setStartTime","isMounted","myTimer","elapsedTime","clearInterval","setInterval","displayName","Tooltip","close","tooltipRef","pxToShift","setPxToShift","top","left","e","stopPropagation","Nav","goBack","charList","foundChars","setIsGameOver","reset","isTooltip","setIsTooltip","includes","CharPopup","chars","validate","SelectionBox","InfoPopup","msg","icon","EndgamePopup","setInfoPopupStatus","showNewGamePopup","place","setPlace","isError","setIsError","inputRef","console","log","getPlace","htmlFor","onSubmit","sortNewLeaderboard","findIndex","obj","isShow","message","username","value","push","sort","b","NewGamePopup","Level","infoPopupStatus","clearTimeout","setTimeout","useInfoPopupStatus","setFoundChars","clickPos","selectionBoxRadius","isInBetween","onValidCheck","isValid","capitalizeFirstLetter","min","max","answerX","answerY","clickX","clickY","selectionRange","xMin","xMax","yMin","yMax","useFoundChars","selectionStatus","setPopupStatus","showSelectionPopup","hideSelectionPopup","isPopup","popupPos","x","clientX","y","clientY","layerX","layerY","useSelectionStatus","isEndgamePopup","setIsEndgamePopup","endTime","setEndTime","useIsGameOver","isNewGamePopup","setIsNewGamePopup","ctnRef","dragToScroll","mouseDownHandler","mouseMoveHandler","mouseUpHandler","mouseLeaveHandler","modalStyle","startPos","isDown","preventDefault","scrollTop","scrollLeft","dx","dy","str","charAt","toUpperCase","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30ff9c74.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getFirestore,\n  doc,\n  setDoc,\n  getDoc,\n  updateDoc,\n} from 'firebase/firestore';\n\n(function init() {\n  const config = {\n    apiKey: 'AIzaSyDAj11m4V4uaxO8RRM-FKIe0bhSn4vS0W4',\n    authDomain: 'where-s-waldo-a6172.firebaseapp.com',\n    projectId: 'where-s-waldo-a6172',\n  };\n  initializeApp(config);\n\n  (async function uploadAnswers() {\n    const db = getFirestore();\n\n    const answer = await getDoc(doc(db, 'answers', '0'));\n    if (answer.exists()) return;\n\n    const answers = [\n      { waldo: [475, 1548], wenda: [2141, 1395], odlaw: [2446, 1504] },\n      {\n        odlaw: [323, 691],\n        wizard: [810, 688],\n        waldo: [1856, 736],\n        wenda: [2320, 792],\n        woof: [2042, 723],\n      },\n      {\n        waldo: [1217, 1237],\n        wenda: [885, 1027],\n        odlaw: [213, 1362],\n        wizard: [2345, 1153],\n        woof: [1764, 1795],\n      },\n      {\n        wizard: [209, 1448],\n        odlaw: [926, 1215],\n        wenda: [1471, 799],\n        waldo: [2564, 1405],\n        woof: [893, 1369],\n      },\n      {\n        waldo: [842, 655],\n        wenda: [757, 1381],\n        wizard: [1837, 1652],\n        odlaw: [1799, 1230],\n      },\n      {\n        wenda: [1799, 1303],\n        odlaw: [1671, 1549],\n        waldo: [2111, 832],\n        wizard: [2072, 1305],\n        woof: [1558, 1261],\n      },\n      {\n        waldo: [2676, 1288],\n        odlaw: [1981, 1088],\n        wizard: [755, 949],\n        wenda: [398, 1645],\n      },\n    ];\n\n    answers.forEach((answer, index) =>\n      setDoc(doc(db, 'answers', `${index}`), answer)\n    );\n  })();\n})();\n\nasync function pullAnswers(level) {\n  const db = getFirestore();\n\n  try {\n    const answers = await getDoc(doc(db, 'answers', `${level}`));\n    if (answers.exists()) return answers.data();\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function pullLeaderboard(level) {\n  const db = getFirestore();\n\n  try {\n    const leaderboard = await getDoc(doc(db, 'leaderboard', 'allLevels'));\n    if (!leaderboard.exists()) return;\n\n    if (level !== 0 && !level) return leaderboard.data();\n\n    return leaderboard.data()[level];\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function updateLeaderboard(level, leaderboard) {\n  const db = getFirestore();\n\n  try {\n    const leaderboardRef = doc(db, 'leaderboard', 'allLevels');\n    const allLeaderboard = await getDoc(leaderboardRef);\n\n    if (allLeaderboard.exists())\n      return updateDoc(leaderboardRef, {\n        [level]: leaderboard,\n      });\n\n    return setDoc(doc(db, 'leaderboard', 'allLevels'), {\n      [level]: leaderboard,\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport { pullAnswers, pullLeaderboard, updateLeaderboard };\n","import React from 'react';\n\nfunction millisecondsToTime(milli, rtrnEl = true) {\n  const milliseconds = milli % 1000;\n  const seconds = Math.floor((milli / 1000) % 60);\n  const minutes = Math.floor((milli / (60 * 1000)) % 60);\n  return rtrnEl ? (\n    <div>\n      <span className=\"num-timer\">{pad(minutes) + ':'}</span>\n      <span className=\"num-timer\">{pad(seconds) + ':'}</span>\n      <span className=\"num-timer ms-timer\">{pad(milliseconds, 3)}</span>\n    </div>\n  ) : (\n    pad(minutes) + ':' + pad(seconds) + ':' + pad(milliseconds, 3)\n  );\n\n  function pad(num, pad) {\n    pad = pad || 2;\n    return ('00' + num).slice(-pad);\n  }\n}\n\nfunction convertToMillsec(timer) {\n  const split = timer.split(':');\n  return +split[0] * 60000 + +split[1] * 1000 + +split[2];\n}\n\nfunction parseTime(time) {\n  const split = time.split(':');\n  if (split[0] === '00') return time.slice(3) + ' seconds';\n  return time + ' minutes';\n}\n\nexport { millisecondsToTime, convertToMillsec, parseTime };\n","export default __webpack_public_path__ + \"static/media/waldo.af4211d5.png\";","export default __webpack_public_path__ + \"static/media/gf.0cb89a79.png\";","export default __webpack_public_path__ + \"static/media/dog.556b0530.png\";","export default __webpack_public_path__ + \"static/media/wizard.e9baf93b.png\";","export default __webpack_public_path__ + \"static/media/evil_waldo.792cf427.png\";","export default __webpack_public_path__ + \"static/media/1*7v_75ZGg1CTmWAw1rEgMHQ.269429c0.jpeg\";","export default __webpack_public_path__ + \"static/media/wheres-waldo-1.dac430f2.jpeg\";","export default __webpack_public_path__ + \"static/media/wheres-waldo-2.f34e308d.jpeg\";","export default __webpack_public_path__ + \"static/media/wheres-waldo-3.5e3e0f5c.jpeg\";","export default __webpack_public_path__ + \"static/media/wheres-waldo-4.3712bdae.jpeg\";","export default __webpack_public_path__ + \"static/media/wheres-waldo-5.67d84050.jpeg\";","export default __webpack_public_path__ + \"static/media/wheres-waldo-6.e2679f45.jpeg\";","export default __webpack_public_path__ + \"static/media/Wheres_Waldo_-_Logo.e6ffa93d.png\";","import waldo from './assets/characters/waldo.png';\nimport wenda from './assets/characters/gf.png';\nimport woof from './assets/characters/dog.png';\nimport wizard from './assets/characters/wizard.png';\nimport odlaw from './assets/characters/evil_waldo.png';\n\nimport levelOne from './assets/levels/1*7v_75ZGg1CTmWAw1rEgMHQ.jpeg';\nimport levelTwo from './assets/levels/wheres-waldo-1.jpeg';\nimport levelThree from './assets/levels/wheres-waldo-2.jpeg';\nimport levelFour from './assets/levels/wheres-waldo-3.jpeg';\nimport levelFive from './assets/levels/wheres-waldo-4.jpeg';\nimport levelSix from './assets/levels/wheres-waldo-5.jpeg';\nimport levelSeven from './assets/levels/wheres-waldo-6.jpeg';\n\nimport logo from './assets/Wheres_Waldo_-_Logo.png';\n\nconst charcImg = {\n  waldo,\n  wenda,\n  woof,\n  wizard,\n  odlaw,\n};\n\nconst levels = [\n  { img: levelOne, char: ['waldo', 'wenda', 'odlaw'] },\n  { img: levelTwo, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelThree, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelFour, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelFive, char: ['waldo', 'wenda', 'wizard', 'odlaw'] },\n  { img: levelSix, char: ['waldo', 'wenda', 'wizard', 'odlaw', 'woof'] },\n  { img: levelSeven, char: ['waldo', 'wenda', 'wizard', 'odlaw'] },\n];\n\nexport { charcImg, levels, logo };\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSpring, useSprings, animated } from 'react-spring';\n\nimport { pullLeaderboard } from '../logic/firebaseStuff';\nimport { millisecondsToTime, parseTime } from '../logic/time';\n\nimport '../styles/LevelSelection.css';\nimport { levels, charcImg, logo } from '../imgSrc';\n\nconst LevelSelection = ({ setLevel }) => {\n  const { slide, slideProps, prevSlide, nextSlide } = useSlide();\n\n  const { bgProps } = useBgFadeAnime(slide);\n\n  // get width of preview container so we know how big slide needs to be/how many px it needs to slide\n  const btnRef = useRef();\n  const previewRef = useRef();\n\n  const { frameWidth, btnWidth } = useMeasurements();\n\n  const [leaderboard, setLeaderboard] = useState();\n  useEffect(async function () {\n    const leaderboard = await pullLeaderboard();\n    setLeaderboard(leaderboard);\n  }, []);\n\n  // custom hook\n  function useMeasurements() {\n    const [frameWidth, setFrameWidth] = useState();\n    const [btnWidth, setBtnWidth] = useState();\n\n    useEffect(() => {\n      setFrameWidth(\n        previewRef.current.offsetWidth - 2 * btnRef.current.offsetWidth\n      );\n      setBtnWidth(btnRef.current.offsetWidth);\n\n      window.addEventListener('resize', setNewFrameWidth);\n      return () => window.removeEventListener('resize', setNewFrameWidth);\n\n      function setNewFrameWidth() {\n        setFrameWidth(previewRef.current.offsetWidth);\n      }\n    });\n\n    return { frameWidth, btnWidth };\n  }\n\n  return (\n    <React.Fragment>\n      <div id=\"bg-frame\" className=\"frame\">\n        {bgProps.map((style, index) => {\n          const bgImage = { backgroundImage: `url(${levels[index].img})` };\n          return (\n            <animated.div\n              key={index}\n              className=\"slider-slide\"\n              style={{ ...style, ...bgImage }}\n            ></animated.div>\n          );\n        })}\n      </div>\n      <div id=\"level-selection-ctn\">\n        <img src={logo} alt=\"wheres waldo\" height=\"80px\" />\n        <p>Select a level</p>\n        <div className=\"slider\">\n          <button\n            id=\"left-nav-btn\"\n            className=\"nav-btn\"\n            type=\"button\"\n            onClick={prevSlide}\n            style={getNavBtnStyle(slide, 'left')}\n          >\n            <i></i>\n          </button>\n\n          <animated.div\n            ref={previewRef}\n            className=\"frame\"\n            onClick={() => setLevel(slide)}\n            style={{\n              transform: slideProps.offset.to(\n                (offsetX) => `translate3d(${offsetX * frameWidth}px, 0, 0)`\n              ),\n              willChange: 'transform',\n              marginLeft: `${btnWidth}px`,\n            }}\n          >\n            {levels.map((level, index) => {\n              const bestTime =\n                leaderboard && leaderboard[index]\n                  ? parseTime(\n                      millisecondsToTime(leaderboard[index][0].time, false)\n                    )\n                  : '--:--:---';\n              return (\n                <div\n                  key={index}\n                  className=\"slider-slide\"\n                  style={{\n                    width: `${frameWidth}px`,\n                    height: 'auto',\n                  }}\n                >\n                  <p className=\"best-time\">Best time: {bestTime}</p>\n                  <div className=\"char-list\">\n                    {level.char.map((name) => {\n                      const img = charcImg[name];\n                      return <img key={name} src={img} alt={name} />;\n                    })}\n                  </div>\n                  <img\n                    src={level.img}\n                    style={{ width: `${frameWidth}px` }}\n                    className=\"preview-img\"\n                  />\n                </div>\n              );\n            })}\n          </animated.div>\n          <button\n            ref={btnRef}\n            id=\"right-nav-btn\"\n            className=\"nav-btn\"\n            type=\"button\"\n            onClick={nextSlide}\n            style={getNavBtnStyle(slide, 'right')}\n          >\n            <i></i>\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nLevelSelection.propTypes = {\n  setLevel: PropTypes.func,\n};\n\nexport default LevelSelection;\nexport { levels };\n\n/// /////////////\n// Custom Hooks//\n/// /////////////\n\nfunction useSlide() {\n  const [slide, setSlide] = useState(0);\n\n  const [slideProps, slidePropsRef] = useSpring(() => ({\n    offset: 0,\n    config: {\n      friction: 40,\n    },\n  }));\n\n  useEffect(\n    () => slidePropsRef.update(() => ({ offset: 0 - slide })).start(),\n    [slide, slidePropsRef]\n  );\n\n  return { slide, slideProps, slidePropsRef, prevSlide, nextSlide };\n\n  function prevSlide() {\n    setSlide((prev) => {\n      if (prev === 0) return 0;\n      return --prev;\n    });\n  }\n\n  function nextSlide() {\n    setSlide((prev) => {\n      if (prev === levels.length - 1) return levels.length - 1;\n      return ++prev;\n    });\n  }\n}\n\nfunction useBgFadeAnime(slide) {\n  const [bgProps, bgPropsRef] = useSprings(levels.length, () => ({\n    opacity: 0,\n    config: {\n      friction: 80,\n    },\n  }));\n\n  useEffect(() => {\n    bgPropsRef\n      .update((index) => {\n        if (index === slide) return { opacity: 1 };\n        return { opacity: 0 };\n      })\n      .start();\n  }, [slide, bgPropsRef]);\n\n  return { bgProps };\n}\n\n/// /////////////\n// helper funcs//\n/// /////////////\n\nfunction getNavBtnStyle(slide, direction) {\n  switch (direction) {\n    case 'left':\n      return slide === 0\n        ? {\n            opacity: 0.2,\n            cursor: 'default',\n            pointerEvents: 'none',\n          }\n        : {\n            opacity: 1,\n            cursor: 'pointer',\n            pointerEvents: 'all',\n          };\n\n    case 'right':\n      return slide === levels.length - 1\n        ? {\n            opacity: 0.2,\n            cursor: 'default',\n            pointerEvents: 'none',\n          }\n        : {\n            opacity: 1,\n            cursor: 'pointer',\n            pointerEvents: 'all',\n          };\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { millisecondsToTime } from '../logic/time';\n\nimport '../styles/Timer.css';\n\nconst Timer = ({ timer, setTimer, isGameOver }) => {\n  const [startTime, setStartTime] = useState(Date.now());\n\n  let isMounted = true;\n  useEffect(() => () => {\n    isMounted = false;\n  });\n\n  useEffect(() => {\n    isGameOver ? clearInterval(myTimer) : setInterval(myTimer, 50);\n    if (isGameOver) setStartTime(Date.now());\n\n    function myTimer() {\n      const elapsedTime = Date.now() - startTime;\n      if (!isMounted) return;\n      setTimer(elapsedTime);\n    }\n  });\n  return <div id=\"timer\">{millisecondsToTime(timer)}</div>;\n};\n\nTimer.displayName = Timer;\nexport default Timer;\n\nTimer.propTypes = {\n  timer: PropTypes.number,\n  setTimer: PropTypes.func,\n  isGameOver: PropTypes.bool,\n};\n","import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/TooltipStyles.css';\n\nconst Tooltip = ({ close }) => {\n  const tooltipRef = useRef(null);\n\n  const [pxToShift, setPxToShift] = useState('-32.1px');\n\n  useEffect(function positionTooltip() {\n    if (!tooltipRef.current) return;\n\n    const width = tooltipRef.current.offsetWidth;\n    const trianglePos = 15; // in %, the value of 'left' styling of tooltip:before aka the little triangle thing\n    const btnRadius = 15; // in px,\n\n    setPxToShift(`-${(width * trianglePos) / 100 - btnRadius}px`);\n  }, []);\n\n  useEffect(function closeTooltipEvent() {\n    window.addEventListener('click', close);\n\n    return () => window.removeEventListener('click', close);\n  });\n\n  return (\n    <div\n      className=\"tooltip\"\n      ref={tooltipRef}\n      style={{\n        top: '52px',\n        left: pxToShift,\n      }}\n      onClick={(e) => e.stopPropagation()}\n    >\n      Double click to make your selection\n    </div>\n  );\n};\n\nTooltip.propTypes = {\n  close: PropTypes.func,\n};\n\nexport default Tooltip;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Timer from './Timer';\nimport Tooltip from './Tooltip';\n\nimport { charcImg } from '../imgSrc';\n\nimport '../styles/Nav.css';\n\nconst Nav = ({\n  goBack,\n  charList,\n  foundChars,\n  isGameOver,\n  setIsGameOver,\n  timer,\n  setTimer,\n  reset,\n}) => {\n  const [isTooltip, setIsTooltip] = useState(false);\n\n  useEffect(() => {\n    if (foundChars.length === charList.length) {\n      setIsGameOver(true);\n    }\n  });\n  return (\n    <nav id=\"nav\">\n      <div className=\"btn-ctn\">\n        <button type=\"button\" className=\"home-btn text-btn\" onClick={goBack}>\n          Go Back\n        </button>\n        <div className=\"tooltip-ctn\">\n          <button\n            type=\"button\"\n            className=\"help-btn icon-btn\"\n            onClick={() => setIsTooltip(true)}\n          >\n            ?\n          </button>\n          {isTooltip && <Tooltip close={() => setIsTooltip(false)} />}\n        </div>\n      </div>\n      <Timer timer={timer} setTimer={setTimer} isGameOver={isGameOver} />\n      <div className=\"char-list\">\n        {charList.map((char) => {\n          if (foundChars.includes(char))\n            return (\n              <div key={char} className=\"char-ctn\">\n                <i className=\"flaticon-draw-check-mark\"></i>\n                <img src={charcImg[char]} alt={char} />\n              </div>\n            );\n\n          return <img key={char} src={charcImg[char]} alt={char} />;\n        })}\n      </div>\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  goBack: PropTypes.func,\n  charList: PropTypes.array,\n  foundChars: PropTypes.array,\n  isGameOver: PropTypes.bool,\n  setIsGameOver: PropTypes.func,\n  timer: PropTypes.number,\n  setTimer: PropTypes.func,\n  reset: PropTypes.func,\n};\n\nexport default Nav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/CharPopup.css';\n\nimport { charcImg } from '../imgSrc';\n\nconst CharPopup = ({ chars, validate }) => {\n  return (\n    <div id=\"char-popup\">\n      {chars.map((char) => {\n        return (\n          <div\n            className=\"char\"\n            key={char}\n            onClick={(e) => {\n              e.stopPropagation();\n              validate(char);\n            }}\n          >\n            <img src={charcImg[char]} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nCharPopup.propTypes = {\n  chars: PropTypes.array,\n  validate: PropTypes.func,\n};\n\nexport default CharPopup;\n","import React from 'react';\n\nimport '../styles/SelectionBox.css';\n\nconst SelectionBox = () => {\n  return <div id=\"selection-box\"></div>;\n};\n\nexport default SelectionBox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/InfoPopup.css';\n\nconst InfoPopup = ({ msg, icon }) => {\n  return (\n    <div id=\"valid-popup\">\n      <p className=\"valid-msg\">\n        {icon && <i className={icon}></i>} {msg}\n      </p>\n    </div>\n  );\n};\n\nInfoPopup.propTypes = {\n  msg: PropTypes.string,\n  icon: PropTypes.string,\n};\n\nexport default InfoPopup;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { pullLeaderboard, updateLeaderboard } from '../logic/firebaseStuff';\nimport { millisecondsToTime, parseTime } from '../logic/time';\n\nimport '../styles/EndgamePopup.css';\n\nconst EndgamePopup = ({\n  level,\n  time,\n  close,\n  setInfoPopupStatus,\n  showNewGamePopup,\n}) => {\n  const [place, setPlace] = useState();\n  const [isError, setIsError] = useState(false);\n  const inputRef = useRef();\n\n  console.log(pullLeaderboard);\n  useEffect(async function () {\n    if (!isError)\n      setPlace(await getPlace(level, time, setInfoPopupStatus, setIsError));\n  });\n  return (\n    <div id=\"popup-modal\" className=\"modal\">\n      <div id=\"endgame-popup\">\n        <header>\n          <h2>You placed {place} in the world!</h2>\n        </header>\n        <hr />\n        <main>\n          <h3>You finished in {parseTime(millisecondsToTime(time, false))}</h3>\n          <p>Enter your name to save your score on the global leaderboard.</p>\n          <div className=\"input-field\">\n            <label htmlFor=\"name\">Username</label>\n            <input ref={inputRef} type=\"text\" name=\"name\" />\n          </div>\n        </main>\n        <footer>\n          <button\n            type=\"button\"\n            id=\"cancel-btn\"\n            className=\"text-btn\"\n            onClick={() => {\n              close();\n              showNewGamePopup();\n            }}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            id=\"submit-btn\"\n            className=\"text-btn\"\n            onClick={() =>\n              onSubmit(\n                level,\n                time,\n                inputRef.current,\n                close,\n                setInfoPopupStatus,\n                setIsError,\n                showNewGamePopup\n              )\n            }\n          >\n            Submit\n          </button>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nEndgamePopup.propTypes = {\n  level: PropTypes.number,\n  time: PropTypes.number,\n  close: PropTypes.func,\n  setInfoPopupStatus: PropTypes.func,\n  showNewGamePopup: PropTypes.func,\n};\n\nexport default EndgamePopup;\n\nasync function getPlace(level, time, setInfoPopupStatus, setIsError) {\n  try {\n    const leaderboard = await sortNewLeaderboard(level, time);\n    return leaderboard.findIndex((obj) => obj.time === time) + 1;\n  } catch (error) {\n    setIsError(true);\n    setInfoPopupStatus({\n      isShow: true,\n      msg: error.message,\n      icon: 'flaticon-close',\n    });\n    return '#';\n  }\n}\n\nasync function onSubmit(\n  level,\n  time,\n  inputRef,\n  close,\n  setInfoPopupStatus,\n  setIsError,\n  showNewGamePopup\n) {\n  const username = inputRef.value;\n  try {\n    const leaderboard = await sortNewLeaderboard(level, time, username);\n    await updateLeaderboard(level, leaderboard);\n    setIsError(false);\n    setInfoPopupStatus({\n      isShow: true,\n      msg: 'Time uploaded successfully',\n      icon: 'flaticon-draw-check-mark',\n    });\n    close();\n    showNewGamePopup();\n  } catch (error) {\n    setInfoPopupStatus({\n      isShow: true,\n      msg: error.message,\n      icon: 'flaticon-close',\n    });\n    throw new Error(error);\n  }\n}\n\nasync function sortNewLeaderboard(level, time, username) {\n  const leaderboard = (await pullLeaderboard(level)) || [];\n  username ? leaderboard.push({ username, time }) : leaderboard.push({ time });\n  return leaderboard.sort((a, b) => {\n    return a.time - b.time;\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/NewGamePopup.css';\n\nconst NewGamePopup = ({ reset, goBack }) => {\n  return (\n    <div id=\"popup-modal\" className=\"modal\">\n      <div id=\"new-game-popup\" className=\"popup\">\n        <div className=\"btn-ctn\">\n          <button\n            type=\"button\"\n            id=\"cancel-btn\"\n            className=\"text-btn\"\n            onClick={goBack}\n          >\n            Level Select\n          </button>\n          <button\n            type=\"button\"\n            id=\"submit-btn\"\n            className=\"text-btn\"\n            onClick={reset}\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nNewGamePopup.propTypes = {\n  reset: PropTypes.func,\n  goBack: PropTypes.func,\n};\n\nexport default NewGamePopup;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\n\nimport Nav from './Nav';\nimport { levels } from './LevelSelection';\nimport CharPopup from './CharPopup';\nimport SelectionBox from './SelectionBox';\nimport InfoPopup from './InfoPopup';\nimport EndgamePopup from './EndgamePopup';\nimport NewGamePopup from './NewGamePopup';\n\nimport { pullAnswers } from '../logic/firebaseStuff.js';\n\nimport '../styles/Level.css';\n\nconst Level = ({ level, goBack }) => {\n  const [infoPopupStatus, setInfoPopupStatus] = useInfoPopupStatus();\n\n  const { foundChars, setFoundChars, validate } = useFoundChars();\n\n  const { selectionStatus, showSelectionPopup, hideSelectionPopup } =\n    useSelectionStatus();\n  const { isPopup, popupPos, clickPos } = selectionStatus;\n\n  const [timer, setTimer] = useState(0);\n\n  const [isEndgamePopup, setIsEndgamePopup] = useState(false);\n  const { isGameOver, setIsGameOver, endTime } = useIsGameOver(\n    timer,\n    setIsEndgamePopup\n  );\n\n  const [isNewGamePopup, setIsNewGamePopup] = useState(false);\n\n  const ctnRef = useRef();\n  useEffect(() => {\n    ctnRef.current.addEventListener('dblclick', showSelectionPopup);\n\n    if (isGameOver)\n      ctnRef.current.removeEventListener('dblclick', showSelectionPopup);\n  }, [isGameOver]);\n  useEffect(() => {\n    ctnRef.current.addEventListener('mousedown', (e) =>\n      dragToScroll.mouseDownHandler(e, ctnRef)\n    );\n    ctnRef.current.addEventListener('mousemove', (e) =>\n      dragToScroll.mouseMoveHandler(e, ctnRef)\n    );\n    ctnRef.current.addEventListener('mouseup', () =>\n      dragToScroll.mouseUpHandler(ctnRef)\n    );\n    ctnRef.current.addEventListener('mouseleave', () =>\n      dragToScroll.mouseLeaveHandler(ctnRef)\n    );\n  });\n\n  const modalStyle = useSpring({ opacity: isPopup ? 1 : 0 });\n\n  const selectionBoxRadius = 55;\n\n  function reset() {\n    setIsNewGamePopup(false);\n    setFoundChars([]);\n    setTimer(0);\n    setIsGameOver(false);\n  }\n\n  return (\n    <React.Fragment>\n      {isEndgamePopup && (\n        <EndgamePopup\n          level={level}\n          time={endTime}\n          close={() => {\n            setIsEndgamePopup(false);\n          }}\n          setInfoPopupStatus={setInfoPopupStatus}\n          showNewGamePopup={() => setIsNewGamePopup(true)}\n        />\n      )}\n      {isNewGamePopup && <NewGamePopup goBack={goBack} reset={reset} />}\n      <Nav\n        goBack={goBack}\n        charList={levels[level].char}\n        foundChars={foundChars}\n        isGameOver={isGameOver}\n        setIsGameOver={setIsGameOver}\n        timer={timer}\n        setTimer={setTimer}\n      />\n      <div id=\"game-ctn\" ref={ctnRef}>\n        <img src={levels[level].img} />\n      </div>\n      {infoPopupStatus.isShow && (\n        <InfoPopup msg={infoPopupStatus.msg} icon={infoPopupStatus.icon} />\n      )}\n      {isPopup && (\n        <animated.div\n          className=\"modal\"\n          style={modalStyle}\n          onClick={hideSelectionPopup}\n        >\n          <div\n            id=\"selection\"\n            style={{\n              top: popupPos.y - selectionBoxRadius,\n              left: popupPos.x - selectionBoxRadius,\n            }}\n          >\n            <SelectionBox />\n            <CharPopup\n              chars={levels[level].char}\n              validate={(char) => {\n                validate(\n                  level,\n                  char,\n                  clickPos,\n                  selectionBoxRadius,\n                  setInfoPopupStatus\n                );\n                hideSelectionPopup();\n              }}\n            />\n          </div>\n        </animated.div>\n      )}\n    </React.Fragment>\n  );\n};\nLevel.propTypes = {\n  level: PropTypes.number,\n  goBack: PropTypes.func,\n};\n\nexport default Level;\n\nconst dragToScroll = {\n  startPos: { top: 0, left: 0, x: 0, y: 0 },\n  isDown: false,\n  mouseDownHandler: (e, ctnRef) => {\n    e.preventDefault();\n    // get current position\n    dragToScroll.startPos = {\n      top: ctnRef.current.scrollTop,\n      left: ctnRef.current.scrollLeft,\n      x: e.clientX,\n      y: e.clientY,\n    };\n    ctnRef.current.style.cursor = 'grabbing';\n\n    dragToScroll.isDown = true;\n  },\n  mouseMoveHandler: (e, ctnRef) => {\n    // see how far the mouse has moved\n    // use scrollLeft + scrollTop to move\n    e.preventDefault();\n    if (!dragToScroll.isDown) return;\n\n    const dx = e.clientX - dragToScroll.startPos.x;\n    const dy = e.clientY - dragToScroll.startPos.y;\n    ctnRef.current.scrollLeft = dragToScroll.startPos.left - dx;\n    ctnRef.current.scrollTop = dragToScroll.startPos.top - dy;\n  },\n  mouseUpHandler: (ctnRef) => {\n    dragToScroll.isDown = false;\n    ctnRef.current.style.cursor = 'grab';\n  },\n  mouseLeaveHandler: (ctnRef) => {\n    dragToScroll.isDown = false;\n    ctnRef.current.style.cursor = 'grab';\n  },\n};\n\n/// /////////////\n// Custom Hooks//\n/// /////////////\n\nfunction useSelectionStatus() {\n  const [selectionStatus, setPopupStatus] = useState({});\n\n  return { selectionStatus, showSelectionPopup, hideSelectionPopup };\n\n  function showSelectionPopup(e) {\n    setPopupStatus({\n      isPopup: true,\n      popupPos: { x: e.clientX, y: e.clientY },\n      clickPos: [e.layerX, e.layerY],\n    });\n  }\n\n  function hideSelectionPopup() {\n    setPopupStatus((prev) => ({ ...prev, isPopup: false }));\n  }\n}\n\nfunction useInfoPopupStatus() {\n  const [infoPopupStatus, setInfoPopupStatus] = useState({});\n\n  useEffect(() => {\n    if (infoPopupStatus.isShow) {\n      let timer = null;\n\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n\n      timer = setTimeout(() => {\n        setInfoPopupStatus((prev) => ({ ...prev, isShow: false }));\n      }, 2000);\n    }\n  }, [infoPopupStatus]);\n\n  return [infoPopupStatus, setInfoPopupStatus];\n}\n\nfunction useFoundChars() {\n  const [foundChars, setFoundChars] = useState([]);\n\n  return { foundChars, setFoundChars, validate };\n\n  async function validate(\n    level,\n    char,\n    clickPos,\n    selectionBoxRadius,\n    setInfoPopupStatus\n  ) {\n    const answers = await pullAnswers(level);\n    const [answerX, answerY] = answers[char];\n    const [clickX, clickY] = clickPos;\n\n    const selectionRange = {\n      xMin: clickX - selectionBoxRadius,\n      xMax: clickX + selectionBoxRadius,\n      yMin: clickY - selectionBoxRadius,\n      yMax: clickY + selectionBoxRadius,\n    };\n\n    if (\n      isInBetween(selectionRange.xMin, selectionRange.xMax, answerX) &&\n      isInBetween(selectionRange.yMin, selectionRange.yMax, answerY)\n    )\n      return onValidCheck(true);\n\n    return onValidCheck(false);\n\n    // helper functions\n    function isInBetween(min, max, num) {\n      return num >= min && num <= max;\n    }\n\n    function onValidCheck(isValid) {\n      if (foundChars.includes(char)) isValid = 'found';\n      const name = capitalizeFirstLetter(char);\n      let msg;\n      let icon;\n      switch (isValid) {\n        case true:\n          msg = `You found ${name}!`;\n          icon = 'flaticon-draw-check-mark';\n          break;\n        case false:\n          msg = `Woops! ${name} isn't there. Try\n        again.`;\n          icon = 'flaticon-close';\n          break;\n        case 'found':\n          msg = `You've already found ${name}!`;\n          icon = '';\n          break;\n      }\n      setInfoPopupStatus({\n        isShow: true,\n        msg,\n        icon,\n      });\n      if (!foundChars.includes(char)) setFoundChars((prev) => [...prev, char]);\n    }\n  }\n}\n\nfunction useIsGameOver(timer, setIsEndgamePopup) {\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [endTime, setEndTime] = useState();\n\n  useEffect(() => {\n    if (isGameOver) {\n      setEndTime(timer);\n      setIsEndgamePopup(true);\n    }\n  }, [isGameOver]);\n\n  return { isGameOver, setIsGameOver, endTime };\n}\n\n/// /////////////\n// helper funcs//\n/// /////////////\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState } from 'react';\n\nimport LevelSelection from './components/LevelSelection';\nimport Level from './components/Level';\n\nimport './globalStyles.css';\n\nfunction App() {\n  const [level, setLevel] = useState();\n\n  return (\n    <React.Fragment>\n      {!level && level !== 0 && <LevelSelection setLevel={setLevel} />}\n      {typeof level === 'number' && (\n        <Level level={level} goBack={() => setLevel()} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}